flip f a b -> (f b a);
< -> (flip >);
min a b -> (? (< a b) a b);
length xs -> (? (== xs [])
  0 (+ 1 (length (tail xs)))
);
map f xs -> (? (== xs [])
  [] (: (f (head xs)) (map f (tail xs)))
);
fst -> head;
snd xs -> (head (tail xs));
or a b -> (? a true (? b true false));
and a b -> (? a (? b true false) false);
zip xs ys -> (? (or (== xs []) (== ys []))
  [] (: [(head xs), (head ys)] (zip (tail xs) (tail ys)))
);
range a b -> (? (== a b)
  [] (: a (range (+ a 1) b))
);

doubleUs x y -> (+ (* x 2) (* y 2));
doubleSmallNumber x -> (? (> x 100) x (* x 2));

main1 -> (map (+ 1) [1, (min 1 2), 3, 4, 5]);
main2 -> (min 1 2);
main3 -> (doubleUs 3 5);
main4 -> (doubleSmallNumber 500);
main5 -> (zip [1,2,3] [4,5,6]);
main6 -> "string";
main -> (dirty_print [main6]);
